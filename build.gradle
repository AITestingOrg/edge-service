buildscript {
    ext {
        springBootVersion = '1.5.14.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("com.jayway.restassured:rest-assured:2.5.0")
        classpath("com.jayway.restassured:spring-mock-mvc:2.5.0")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'
apply plugin: 'checkstyle'

checkstyle {
    configFile = new File(rootDir, "checkstyle.xml")
    toolVersion = "8.7"
}

group = 'aist.edge'
version = '0.0.1'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        url 'https://dl.bintray.com/palantir/releases'
    }
}

configurations {
    providedRuntime
}

ext {
    springCloudVersion = 'Edgware.SR3'
}

dependencies {
    compile('org.springframework.security:spring-security-test')
    compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
    compile('org.springframework.cloud:spring-cloud-starter-netflix-hystrix')
    compile('org.springframework.cloud:spring-cloud-starter-oauth2')
    compile('org.springframework.cloud:spring-cloud-starter-netflix-zuul')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.data:spring-data-rest-hal-browser')
    providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
    testCompile ('org.springframework.cloud:spring-cloud-starter-netflix-eureka-server')
    testCompile('com.jayway.restassured:rest-assured:2.5.0')
    testCompile ('com.jayway.restassured:spring-mock-mvc:2.5.0')
    testCompile ('org.springframework.cloud:spring-cloud-starter-contract-stub-runner')
    testCompile ('com.palantir.docker.compose:docker-compose-rule-junit4:0.33.0')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

checkstyle {
    toolVersion = "8.7"
    configFile = new File(rootDir, "checkstyle.xml")
}

test {
    testLogging {
        events "failed"
        exceptionFormat "full"
    }
}